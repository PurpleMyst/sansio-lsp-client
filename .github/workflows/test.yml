name: Tests

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/setup-node@v2
        with:
          node-version: "12"
      - run: |
          mkdir tests/langservers
      - run: |
          cd tests/langservers && npm install javascript-typescript-langserver
      - shell: bash
        run: |
          cd tests/langservers
          for VERSION in 10.0.0 11.0.0; do
            wget "https://github.com/clangd/clangd/releases/download/$VERSION/clangd-linux-$VERSION.zip"
            python3 -m zipfile -e "clangd-linux-$VERSION.zip" .
            chmod +x clangd_$VERSION/bin/clangd
          done
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x
      - run: |
          cd tests/langservers && GOPATH="$(pwd)" GO111MODULE=on go get golang.org/x/tools/gopls@latest
      - run: |
          pip install poetry && poetry install
      - run: |
          poetry run pytest --cov=tarts --cov-report=xml:cov.xml -v
      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: cov.xml
